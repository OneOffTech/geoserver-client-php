name: run-tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [7.4, 8.0, 8.1]
        geoserver: ["2.20.4", "2.21.0"]
        exclude:
        - geoserver: "2.20.4"
          php: 7.4

    name: P${{ matrix.php }} - G${{ matrix.geoserver }}

    env:
      GEOSERVER_TAG: ${{ matrix.geoserver }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer update --prefer-dist --no-interaction
      
      - name: Create Environment
        run: |
          docker-compose -f ./tests/docker-compose.yml up -d
          php ./tests/wait.php

      - name: Execute tests
        env:
          GEOSERVER_URL: "http://127.0.0.1:8600/geoserver/"
          GEOSERVER_USER: "GEOSERVER_ADMIN_USER"
          GEOSERVER_PASSWORD: "GEOSERVER_ADMIN_PASSWORD"
        run: vendor/bin/phpunit

      - name: Stop Environment
        if: always()
        run: |
          docker-compose -f ./tests/docker-compose.yml down